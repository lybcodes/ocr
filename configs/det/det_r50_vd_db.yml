Global:
  algorithm: DB
  use_gpu: true
  epoch_num: 200
  log_smooth_window: 20
  print_batch_step: 2
  save_model_dir: ./output/det_db2/
  save_epoch_step: 10
  eval_batch_step: [0, 100]
  train_batch_size_per_card: 4
  test_batch_size_per_card: 5
  image_shape: [3, 960, 960]
  reader_yml: ./configs/det/det_db_icdar15_reader.yml
  pretrain_weights: ./output/det_db/best_accuracy
  save_res_path: ./output/det_db2/predicts_db.txt
  checkpoints:
  save_inference_dir:
  infer_img:

Architecture:
  function: ppocr.modeling.architectures.det_model,DetModel

Backbone:
  function: ppocr.modeling.backbones.det_resnet_vd,ResNet
  layers: 50

Head:
  function: ppocr.modeling.heads.det_db_head,DBHead
  model_name: large
  k: 50
  inner_channels: 256
  out_channels: 2

Loss:
  function: ppocr.modeling.losses.det_db_loss,DBLoss
  balance_loss: true
  main_loss_type: DiceLoss
  alpha: 5
  beta: 10
  ohem_ratio: 3

Optimizer:
  function: ppocr.optimizer,AdamDecay
  base_lr: 0.0001
  beta1: 0.9
  beta2: 0.999


PostProcess:
  function: ppocr.postprocess.db_postprocess,DBPostProcess
  thresh: 0.3
  box_thresh: 0.7
  max_candidates: 1000
  unclip_ratio: 1.5
  
